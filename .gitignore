import turtle

# Inicializa la pantalla de Turtle
ventana = turtle.Screen()
ventana.title("Ingreso de Nombres")
ventana.bgcolor("white")

# Crea un objeto Turtle para el ingreso del primer nombre
nombre1_tortuga = turtle.Turtle()
nombre1_tortuga.goto(-100, 0)

# Crea un objeto Turtle para el ingreso del segundo nombre
nombre2_tortuga = turtle.Turtle()
nombre2_tortuga.goto(-100, -30)

# Crea dos objetos Turtle para ingresar los nombres
nombre1_input = turtle.textinput("INGRESAR", "JUGADOR 1:")
nombre2_input = turtle.textinput("INGRESAR", "JUGADOR 2:")

# Asigna los nombres ingresados a las variables
nombre1 = nombre1_input
nombre2 = nombre2_input

# Inicializa la pantalla del juego Pong
ventana = turtle.Screen()
ventana.title(f"{nombre1}_{nombre2}_Pong")
ventana.bgcolor("white")
ventana.setup(width=1366, height=768)

# Izquierda
pared_izquierda = turtle.Turtle()
pared_izquierda.speed(5)
pared_izquierda.shape("square")
pared_izquierda.color("black")
pared_izquierda.shapesize(stretch_wid=6, stretch_len=2)
pared_izquierda.penup()
pared_izquierda.goto(-650, 0)

# Derecha
pared_derecha = turtle.Turtle()
pared_derecha.speed(5)
pared_derecha.shape("square")
pared_derecha.color("black")
pared_derecha.shapesize(stretch_wid=6, stretch_len=2)
pared_derecha.penup()
pared_derecha.goto(650, 0)

# Pelota en forma de círculo
pelota = turtle.Turtle()
pelota.speed(100)
pelota.shape("circle")
pelota.color("black")
pelota.penup()
pelota.goto(0, 0)
pelota.dx = 5
pelota.dy = -5

# Marcador
puntaje_izquierda = 0
puntaje_derecha = 0
marcador = turtle.Turtle()
marcador.speed(0)
marcador.color("black")
marcador.penup()
marcador.hideturtle()
marcador.goto(0, 170)
marcador.write(f"{nombre1}: {puntaje_izquierda}   {nombre2}: {puntaje_derecha}", align="center", font=("Arial", 24, "normal"))

# Funciones para mover las paredes arriba y abajo
def pared_izquierda_arriba():
    y = pared_izquierda.ycor()
    y += 20
    pared_izquierda.sety(y)

def pared_izquierda_abajo():
    y = pared_izquierda.ycor()
    y -= 20
    pared_izquierda.sety(y)

def pared_derecha_arriba():
    y = pared_derecha.ycor()
    y += 20
    pared_derecha.sety(y)

def pared_derecha_abajo():
    y = pared_derecha.ycor()
    y -= 20
    pared_derecha.sety(y)

# Esta línea de código indica que el juego está escuchando eventos del teclado.
# Esto es necesario para que el juego pueda "capturar" las teclas que el usuario esta presionando.
ventana.listen()
ventana.onkeypress(pared_izquierda_arriba, "w")
ventana.onkeypress(pared_izquierda_abajo, "s")
ventana.onkeypress(pared_izquierda_arriba, "W")
ventana.onkeypress(pared_izquierda_abajo, "S")
ventana.onkeypress(pared_derecha_arriba, "Up")
ventana.onkeypress(pared_derecha_abajo, "Down")

# Bucle principal del juego
while puntaje_izquierda < 5 and puntaje_derecha < 5:
    ventana.update()

    # Mover la pelota
    #Esta línea de código actualiza la posición horizontal de la pelota. pelota.xcor() devuelve la posición actual en el eje X de la pelota,
    #Pelota.dx es una variable que representa la velocidad o el desplazamiento horizontal de la pelota.
    # Al sumar pelota.dx a la posición actual en el eje X, estás moviendo la pelota hacia la derecha o la izquierda.
    pelota.setx(pelota.xcor() + pelota.dx)
    pelota.sety(pelota.ycor() + pelota.dy)

    # Comprobación de bordes para las paredes superior e inferior
    if pelota.ycor() > 310:
        pelota.sety(310)
    #Al momento que la pelota toca un limite, su velocidad vertical se invierte multiplicando su valor por -1.
    # Esto hace que la pelota cambie su dirección vertical y rebote en la dirección opuesta.
    # Si estaba bajando, ahora comenzará a subir, y si estaba subiendo, ahora comenzará a bajar
        pelota.dy *= -1

    if pelota.ycor() < -310:
        pelota.sety(-310)
        pelota.dy *= -1

    # Comprobación de bordes para las paredes izquierda y derecha
    if pelota.xcor() > 690:
        pelota.goto(0, 0)
        pelota.dx *= -1
        puntaje_izquierda += 1
        marcador.clear()
        marcador.write(f"{nombre1}: {puntaje_izquierda}   {nombre2}: {puntaje_derecha}", align="center", font=("Arial", 24, "normal"))

    if pelota.xcor() < -690:
        pelota.goto(0, 0)
        pelota.dx *= -1
        puntaje_derecha += 1
        marcador.clear()
        marcador.write(f"{nombre1}: {puntaje_izquierda}   {nombre2}: {puntaje_derecha}", align="center", font=("Arial", 24, "normal"))

    # Detección de colisión entre la pelota y las paredes izquierda y derecha
    if (pelota.dx < 0) and (pelota.xcor() < -630) and (pared_izquierda.ycor() + 50 > pelota.ycor() > pared_izquierda.ycor() - 50):
        pelota.dx *= -1

    if (pelota.dx > 0) and (pelota.xcor() > 630) and (pared_derecha.ycor() + 50 > pelota.ycor() > pared_derecha.ycor() - 50):
        pelota.dx *= -1

# Cierra la ventana al final del juego
ventana.bye()

